extends ../layout

block content
  .container
    .resource-post
      .resource-user-info
        img(src="/api/resources/" + resource._id + "/image" alt=resource.image)
        span #{resource.author.name}
      .resource-rating
        .rating
          input#star5(type='radio' name='rating' value='5')
          label(for='star5' title='5') 5 stars
          input#star4(type='radio' name='rating' value='4')
          label(for='star4' title='4') 4 stars
          input#star3(type='radio' name='rating' value='3')
          label(for='star3' title='3') 3 stars
          input#star2(type='radio' name='rating' value='2')
          label(for='star2' title='2') 2 stars
          input#star1(type='radio' name='rating' value='1')
          label(for='star1' title='1') 1 star
        .clearfix
      p.resource-type-year #{resource.type} - #{resource.year}
      h2.resource-title.resource-general-color #{resource.subject} 
      p.resource-description.resource-general-color #{resource.description} 
      each tags in resource.tags
        p.resource-tags
          a(href="#" + tags) ##{tags} 

      a.btn.btn-bottom.btn-outline-primary.mb-5(href=`/api/resources/${resource._id}/download` role="button") Download

      if resource.mime_type == "application/pdf"
        iframe(src=`/api/resources/${resource._id}/content` width="100%" height="500px")
      else if resource.mime_type.match(/^image\//)
        img(src=`/api/resources/${resource._id}/content` width="100%")
      else if resource.mime_type.match(/^video\//)
        video(width="100%" controls)
          source(src=`/api/resources/${resource._id}/content` type=`${resource.mime_type}`)
      else if resource.mime_type.match(/^text\//)
        iframe(src=`/api/resources/${resource._id}/content` width="100%" height="500px" style="background: white")

      br
      p
      p.resource-comments
        a.commentsTotal(data-toggle='collapse' href='#collapseComments' role='button' aria-expanded='false' aria-controls='collapseComments')
          | #{resource.comments.reduce((acc, e) => {return acc + e.comments.length}, resource.comments.length)} comments
      #collapseComments.collapse.scroll-comments
        each comments, index in resource.comments
          .resource-comment
            if user._id == comments.author._id
              span.dropdown-menu-comments.dropdown-toggle(type='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')
              .dropdown-menu.dropdown-comments-options
                span.delete-comment(id=index) Delete
            .resource-comment-info
              p.resource-comment-author #{comments.author.name} 
              span.resource-general-color #{comments.description}
          span.resource-comment-date #{comments.date}
          form.needs-validation(id='form-reply-comment-' + index method='POST', enctype='multipart/form-data', novalidate='')
            .form-group.reply_comment
              input(type='hidden' name='comment_index' value=index)
              input(type='hidden' name='user_id' value=user._id)
              input(type='hidden' name='user_name' value=user.first_name + " " + user.last_name)
              input(type='hidden' name='resource_id' value=resource._id)
              .input-group.mb-3
                input#comment.reply-comment.form-control(type='text' placeholder='Reply ...' name='comment' required='')
                .input-group-append
                  button.btn.btn-bottom.btn-outline-secondary#reply-comment-confirm
                    i.fa.fa-chevron-right
          if (comments.comments.length)
            each comments_comments, index_reply in comments.comments
              .resource-comment.resource-comment-reply
                if user._id == comments_comments.author._id
                  span.dropdown-menu-comments.dropdown-toggle(type='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')
                  .dropdown-menu.dropdown-comments-options
                    span.delete-comment(id=index + '-' + index_reply) Delete
                .resource-comment-info 
                  p.resource-comment-author #{comments_comments.author.name} 
                  span.resource-general-color #{comments_comments.description}
              span.resource-comment-date.reply-date #{comments_comments.date}
      .row
        .col-sm
          form.needs-validation#form-add-comment(method='POST', enctype='multipart/form-data', novalidate='')
            .form-group.comment
              input(type='hidden' name='user_id' value=user._id)
              input(type='hidden' name='user_name' value=user.first_name + " " + user.last_name)
              input(type='hidden' name='resource_id' value=resource._id)
              .input-group.mb-3
                input#comment.form-control(type='text' placeholder='Write a comment ...' name='comment' required='')
                .input-group-append
                  button.btn.btn-bottom.btn-outline-secondary#comment-confirm
                    i.fa.fa-chevron-right