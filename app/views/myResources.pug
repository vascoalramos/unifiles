extends layout

block content
  .container.maincontainer(style="max-width:800px;")
    .col-12.pl-0.pr-0.feed#feed(style="border-radius:5px;box-shadow:0px 8px 8px -11px black;")
      .loading
        .ball
        .ball
        .ball

    .col-12
      #successModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalLabel' aria-hidden='true')
        .modal-dialog.modal-dialog-centered.modal-sm(role='document')
          .modal-content
            .modal-body.pb-o.text-center
              h2
                i.fas.fa-check(style="color:green")
              h4.text-center(id="successModalMessage")
            .modal-footer(style="border:0")
              button.col-12.btn.btn-primary(style="background:#343a40;border:0;box-shadow: none!important" onclick='location.reload()') Ok

    .col-12
      #deleteModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalLabel' aria-hidden='true')
        .modal-dialog.modal-dialog-centered.modal-sm(role='document')
          .modal-content
            .modal-body.pb-o.text-center
              h2
                i.fas.fa-exclamation-triangle(style="color:red")
              h4 Are you sure you want to delete this resource?
            .modal-footer(style="border:0")
              button.col-12.btn.btn-danger(id="deleteResourceConfimBtn" style="border:0;box-shadow: none!important") Yes
              button.col-12.btn.btn-primary(style="background:#343a40;border:0;box-shadow: none!important" onclick="$('#deleteModal').modal('hide')") No

  
  script(type="text/javascript").
    if (location.pathname == "/myResources") getMyResource();

    async function getMyResource() {
      counterGetResource++;
      skipGetResource = counterGetResource == 1 ? 0 : skipGetResource + 5;

      if (skipGetResource <= totalResource) {
          const resourceResponse = await fetch(
              host + `/api/users/#{user.username}/resources?skip=${skipGetResource}&lim=${limitGetResource}`,
          );
          const resourceData = await resourceResponse.json();
          const data = { resource: resourceData.resources };
          totalResource = resourceData.total;

          addDataToDOM(data);
      } else document.querySelector(".loading").classList.remove("show");
    }

    window.addEventListener("scroll", () => {
      const { scrollTop, scrollHeight, clientHeight } = document.documentElement;

      if (clientHeight + scrollTop >= scrollHeight - 5) {
          if (location.pathname == "/myResources")
              // show the loading animation
              showLoading();
      }
    });

    function showLoading() {
        document.querySelector(".loading").classList.add("show");

        // load more data
        setTimeout(getMyResource, 1000);
    }
